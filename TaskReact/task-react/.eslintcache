[{"/Users/nurbakytappazov/Desktop/NurApp/ВЕРСТКИ/task-react/src/index.js":"1","/Users/nurbakytappazov/Desktop/NurApp/ВЕРСТКИ/task-react/src/App.js":"2","/Users/nurbakytappazov/Desktop/NurApp/ВЕРСТКИ/task-react/src/reportWebVitals.js":"3","/Users/nurbakytappazov/Desktop/NurApp/ВЕРСТКИ/task-react/src/components/Sidebar.js":"4","/Users/nurbakytappazov/Desktop/NurApp/ВЕРСТКИ/task-react/src/components/content/Content.js":"5","/Users/nurbakytappazov/Desktop/NurApp/ВЕРСТКИ/task-react/src/components/content/Tabs.js":"6","/Users/nurbakytappazov/Desktop/NurApp/ВЕРСТКИ/task-react/src/components/content/Header.js":"7","/Users/nurbakytappazov/Desktop/NurApp/ВЕРСТКИ/task-react/src/components/content/TabBody.js":"8","/Users/nurbakytappazov/Desktop/NurApp/ВЕРСТКИ/task-react/src/jqueryHandler.js":"9","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/index.js":"10","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/App.js":"11","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/reportWebVitals.js":"12","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/jqueryHandler.js":"13","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/content/Content.js":"14","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/Sidebar.js":"15","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/content/Header.js":"16","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/content/TabBody.js":"17","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/content/Tabs.js":"18","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/Home.js":"19","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/redux/index.js":"20","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/redux/actions.js":"21","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/NuskaList.js":"22","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/redux/types.js":"23","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/Main.js":"24","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/auth/Auth.js":"25","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/redux/reducers/surakReducer.js":"26","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/redux/reducers/panReducer.js":"27","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/redux/reducers/authReducer.js":"28","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/redux/reducers/loadingReducer.js":"29","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/auth/Login.js":"30","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/auth/Register.js":"31"},{"size":266,"mtime":1609951201069,"results":"32","hashOfConfig":"33"},{"size":394,"mtime":1610028054351,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1609939915118,"results":"35","hashOfConfig":"33"},{"size":848,"mtime":1610023352316,"results":"36","hashOfConfig":"33"},{"size":778,"mtime":1610025180338,"results":"37","hashOfConfig":"33"},{"size":921,"mtime":1610029520627,"results":"38","hashOfConfig":"33"},{"size":288,"mtime":1610023533782,"results":"39","hashOfConfig":"33"},{"size":2457,"mtime":1613295203265,"results":"40","hashOfConfig":"33"},{"size":1098,"mtime":1610284673540,"results":"41","hashOfConfig":"33"},{"size":560,"mtime":1613415456302,"results":"42","hashOfConfig":"43"},{"size":514,"mtime":1613463336727,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":1609939915118,"results":"45","hashOfConfig":"43"},{"size":1522,"mtime":1613719566064,"results":"46","hashOfConfig":"43"},{"size":1067,"mtime":1613717852294,"results":"47","hashOfConfig":"43"},{"size":1244,"mtime":1613419479171,"results":"48","hashOfConfig":"43"},{"size":338,"mtime":1613571111754,"results":"49","hashOfConfig":"43"},{"size":10709,"mtime":1613718777439,"results":"50","hashOfConfig":"43"},{"size":3751,"mtime":1613719603391,"results":"51","hashOfConfig":"43"},{"size":1886,"mtime":1613579608793,"results":"52","hashOfConfig":"43"},{"size":404,"mtime":1613642120306,"results":"53","hashOfConfig":"43"},{"size":1216,"mtime":1613645328680,"results":"54","hashOfConfig":"43"},{"size":2034,"mtime":1613579748033,"results":"55","hashOfConfig":"43"},{"size":340,"mtime":1613642682664,"results":"56","hashOfConfig":"43"},{"size":409,"mtime":1613400485966,"results":"57","hashOfConfig":"43"},{"size":829,"mtime":1613463392300,"results":"58","hashOfConfig":"43"},{"size":1050,"mtime":1613716540237,"results":"59","hashOfConfig":"43"},{"size":455,"mtime":1613642662005,"results":"60","hashOfConfig":"43"},{"size":277,"mtime":1613416259770,"results":"61","hashOfConfig":"43"},{"size":272,"mtime":1613645364458,"results":"62","hashOfConfig":"43"},{"size":3621,"mtime":1613461658095,"results":"63","hashOfConfig":"43"},{"size":6734,"mtime":1613463314738,"results":"64","hashOfConfig":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"zxjirg",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"67"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"jdrx1g",{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"87"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"87"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"87"},"/Users/nurbakytappazov/Desktop/NurApp/ВЕРСТКИ/task-react/src/index.js",[],["133","134"],"/Users/nurbakytappazov/Desktop/NurApp/ВЕРСТКИ/task-react/src/App.js",[],"/Users/nurbakytappazov/Desktop/NurApp/ВЕРСТКИ/task-react/src/reportWebVitals.js",[],"/Users/nurbakytappazov/Desktop/NurApp/ВЕРСТКИ/task-react/src/components/Sidebar.js",[],"/Users/nurbakytappazov/Desktop/NurApp/ВЕРСТКИ/task-react/src/components/content/Content.js",[],"/Users/nurbakytappazov/Desktop/NurApp/ВЕРСТКИ/task-react/src/components/content/Tabs.js",["135"],"import React from 'react';\n\nexport const Tabs = ({data, toggle}) => {\n   return (\n      <div className=\"guide_tabs\">\n         {\n            data !== null &&\n            data.pans.map((i, index) => (\n               <a key={i.name} id={i.name} className={index !== 0 ? \"ques_block\" : \"ques_block act-tab\"} onClick={(e) => toggle(e)}>\n                  <h3 className=\"ques_title\">\n                     {i.name}\n                  </h3>\n                  <p className=\"ques_data\" style={{display: index === 0 && 'block'}}>\n                     Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                     Eligendi, explicabo temporibus eum est quas molestias iste\n                     sequi iure perspiciatis cumque eos? Dignissimos ullam pariatur\n                     sequi placeat velit ad consequuntur praesentium!\n                  </p>\n               </a>\n            ))\n         }\n      </div>\n   );\n};","/Users/nurbakytappazov/Desktop/NurApp/ВЕРСТКИ/task-react/src/components/content/Header.js",[],"/Users/nurbakytappazov/Desktop/NurApp/ВЕРСТКИ/task-react/src/components/content/TabBody.js",[],"/Users/nurbakytappazov/Desktop/NurApp/ВЕРСТКИ/task-react/src/jqueryHandler.js",[],"/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/index.js",[],["136","137"],"/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/App.js",[],"/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/reportWebVitals.js",[],"/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/jqueryHandler.js",[],"/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/content/Content.js",[],"/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/Sidebar.js",[],"/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/content/Header.js",[],"/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/content/TabBody.js",["138","139","140","141","142","143","144","145","146"],"import React from 'react';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { answerHandler, limitHandler } from '../../jqueryHandler';\nimport { setSurak } from '../../redux/actions';\n\nexport const TabBody = () => {\n   \n   const loading = useSelector(state => state.loading)\n   const pans = useSelector(state => state.pans.data)\n   const surak = useSelector(state => state.surak)\n   const dispatch = useDispatch()\n\n\n   const saveHandler = (e, limit, panId, surIndex) => {\n      const checked = e.target.checked;\n      // console.log(limitHandler(e, limit))\n      if (limitHandler(e, limit) !== false) {   \n         pans.map((item, index) => {\n            if (item.id === panId) {\n               surak[index].map((jtem, jndex) => {\n                  if (jndex === surIndex) {\n                     let uj = jtem.userJauap;\n                     if (uj !== undefined && jtem.jauapSani > 1) {\n                        if (checked === true){\n                           if (uj === '-') {\n                              jtem.userJauap = e.target.value;\n                           }\n                           else{\n                              jtem.userJauap += ',' + e.target.value;\n                           }\n                        }\n                        else{\n                           for (let i = 0; i < uj.length; i++) {\n                              if (uj[i] === e.target.value) {\n                                 if (i > 0) {\n                                    uj = uj.replace(','+uj[i], '');\n                                 }\n                                 else{\n                                    if (uj.length > 1) {\n                                       uj = uj.replace(uj[i]+',', '');\n                                    }\n                                    else{\n                                       uj = uj.replace(uj[i], '-');\n                                    }\n                                 }\n                              }\n                           }\n                           jtem.userJauap = uj;\n                        }\n                     }\n                     else {\n                        jtem.userJauap = e.target.value;\n                     }\n                     localStorage.setItem('pan'+index, JSON.stringify(surak[index]));\n                     dispatch(setSurak(jtem.userJauap, index))\n                  }\n               })\n               // console.log(surak)\n            }\n         })\n      }\n   }\n   \n   return (\n      <div className=\"result\">\n         {pans.map((item, index) => (\n            <div\n               key={item.id}\n               className={index === 0 ? \"result-item act-result\" : \"result-item\"}>\n                  {loading !== true ? \n                  (surak[index] !== undefined && surak[index].map((jtem, jndex) => {\n                  const type = jtem.jauapSani > 1 ? 'checkbox' : 'radio';\n                  return (\n                     <div key={jtem.surakName} className={jndex === 0 ? \"answer act-answer\" : \"answer\"}>\n                        <ul>\n                           <li className=\"ans_text\">{jtem.surakNumber + '. ' + jtem.surakName}</li>\n                           <li>\n                              {(jtem.surakUrl !== null && jtem.surakUrl !== undefined) && (\n                                 <img className=\"ans_jauap_text\" src={`http://entapp-001-site7.itempurl.com${jtem.surakUrl}`}/>\n                              )}\n                           </li>\n                           <li>\n                              <label className=\"ans_surak_block\">\n                                 <input type={type} name={jtem.surakName} value=\"A\" onChange={(e) => saveHandler(e, jtem.jauapSani, jtem.panId, jndex)} defaultChecked={(jtem.userJauap !== undefined && jtem.userJauap.includes(\"A\")) ? true : false} />\n                                 <span className=\"ans_jauap_wrap\">\n                                    <span className=\"ans_jauap_char\">A</span>\n                                    {jtem.url !== true ? (\n                                       <span className=\"ans_jauap_text\">{jtem.a}</span>\n                                    ) : (\n                                       <img className=\"ans_jauap_text\" src={`http://entapp-001-site7.itempurl.com${jtem.a}`}/>\n                                    )}\n                                 </span>\n                              </label>\n                           </li>\n                           <li>\n                              <label className=\"ans_surak_block\">\n                                 <input type={type} name={jtem.surakName} value=\"B\" onChange={(e) => saveHandler(e, jtem.jauapSani, jtem.panId, jndex)} defaultChecked={(jtem.userJauap !== undefined && jtem.userJauap.includes(\"B\")) ? true : false} />\n                                 <span className=\"ans_jauap_wrap\">\n                                    <span className=\"ans_jauap_char\">B</span>\n                                    {jtem.url !== true ? (\n                                       <span className=\"ans_jauap_text\">{jtem.b}</span>\n                                    ) : (\n                                       <img className=\"ans_jauap_text\" src={`http://entapp-001-site7.itempurl.com${jtem.b}`}/>\n                                    )}\n                                 </span>\n                              </label>\n                           </li>\n                           <li>\n                              <label className=\"ans_surak_block\">\n                                 <input type={type} name={jtem.surakName} value=\"C\" onChange={(e) => saveHandler(e, jtem.jauapSani, jtem.panId, jndex)} defaultChecked={(jtem.userJauap !== undefined && jtem.userJauap.includes(\"C\")) ? true : false} />\n                                 <span className=\"ans_jauap_wrap\">\n                                    <span className=\"ans_jauap_char\">C</span>\n                                    {jtem.url !== true ? (\n                                       <span className=\"ans_jauap_text\">{jtem.c}</span>\n                                    ) : (\n                                       <img className=\"ans_jauap_text\" src={`http://entapp-001-site7.itempurl.com${jtem.c}`}/>\n                                    )}\n                                 </span>\n                              </label>\n                           </li>\n                           <li>\n                              <label className=\"ans_surak_block\">\n                                 <input type={type} name={jtem.surakName} value=\"D\" onChange={(e) => saveHandler(e, jtem.jauapSani, jtem.panId, jndex)} defaultChecked={(jtem.userJauap !== undefined && jtem.userJauap.includes(\"D\")) ? true : false} />\n                                 <span className=\"ans_jauap_wrap\">\n                                    <span className=\"ans_jauap_char\">D</span>\n                                    {jtem.url !== true ? (\n                                       <span className=\"ans_jauap_text\">{jtem.d}</span>\n                                    ) : (\n                                       <img className=\"ans_jauap_text\" src={`http://entapp-001-site7.itempurl.com${jtem.d}`}/>\n                                    )}\n                                 </span>\n                              </label>\n                           </li>\n                           <li>\n                              <label className=\"ans_surak_block\">\n                                 <input type={type} name={jtem.surakName} value=\"E\" onChange={(e) => saveHandler(e, jtem.jauapSani, jtem.panId, jndex)} defaultChecked={(jtem.userJauap !== undefined && jtem.userJauap.includes(\"E\")) ? true : false} />\n                                 <span className=\"ans_jauap_wrap\">\n                                    <span className=\"ans_jauap_char\">E</span>\n                                    {jtem.url !== true ? (\n                                       <span className=\"ans_jauap_text\">{jtem.e}</span>\n                                    ) : (\n                                       <img className=\"ans_jauap_text\" src={`http://entapp-001-site7.itempurl.com${jtem.e}`}/>\n                                    )}\n                                 </span>\n                              </label>\n                           </li>\n                           <li>\n                              <label className=\"ans_surak_block\">\n                                 <input type={type} name={jtem.surakName} value=\"F\" onChange={(e) => saveHandler(e, jtem.jauapSani, jtem.panId, jndex)} defaultChecked={(jtem.userJauap !== undefined && jtem.userJauap.includes(\"F\")) ? true : false} />\n                                 <span className=\"ans_jauap_wrap\">\n                                    <span className=\"ans_jauap_char\">F</span>\n                                    {jtem.url !== true ? (\n                                       <span className=\"ans_jauap_text\">{jtem.f}</span>\n                                    ) : (\n                                       <img className=\"ans_jauap_text\" src={`http://entapp-001-site7.itempurl.com${jtem.f}`}/>\n                                    )}\n                                 </span>\n                              </label>\n                           </li>\n                           <li>дурыс жауап {jtem.jauap}</li>\n                           <li>{jtem.jauapSani}</li>\n                        </ul>\n                        <div className=\"btn_pager_wrap\">\n                           {jndex !== 0 && (\n                              <button className=\"page_prev\" onClick={() => answerHandler('prev')}>\n                                 <i className=\"fa fa-long-arrow-alt-left\"></i>\n                                 <span>Артқа</span>\n                              </button>\n                           )}\n                           {jndex !== surak[index].length-1 && (\n                              <button className=\"page_next\" onClick={() => answerHandler('next')}>\n                                 <span>Келесі</span>\n                                 <i className=\"fa fa-long-arrow-alt-right\"></i>\n                              </button>\n                           )}\n                        </div>\n                     </div>\n                  )}))\n                  : (\n                     <SkeletonTheme color=\"#e7f6fa\" highlightColor=\"#fff\">\n                        <div className=\"answer act-answer\">\n                           <Skeleton style={{minHeight: 400, lineHeight: '400px'}} />\n                        </div>\n                     </SkeletonTheme>\n                  )\n               }\n            </div>\n         ))}\n      </div>\n   );\n};\n","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/content/Tabs.js",["147","148","149"],"/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/Home.js",["150","151"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { firstPan, loadPans } from '../redux/actions';\nimport { TabBody } from './content/TabBody';\nimport { Tabs } from './content/Tabs';\n\nexport const Home = ({match}) => {\n   const [finish, setFinish] = useState(null)\n   const nuskaId = match.params.id;\n\n   const dispatch = useDispatch()\n\n   useEffect(() => {\n      getPan()\n   }, [])\n   \n   const getPan = async () => {\n      const userId = sessionStorage.getItem('user')\n      let response = await fetch('http://entapp-001-site7.itempurl.com/api/tsk/pan', {\n         method: 'POST',\n         headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n         },\n         body: JSON.stringify({\"NuskaId\" : nuskaId, \"UserId\": userId})\n      });\n      let result = await response.json();\n      // console.log(result)\n      dispatch(loadPans(result))\n      dispatch(firstPan(result[0].id))\n   }\n\n   const finishHandler = () => {\n      const save = JSON.parse(localStorage.getItem('save'));\n\n      let counter = 0;\n      if(save !== null){\n         save.map((item) => {\n            item.ques.map((jtem) => {\n   \n               if (jtem.userJauap !== (undefined || null)){\n                  if(jtem.userJauap === jtem.jauap) {\n                     counter ++;\n                  }\n               }\n            })\n         });\n         setFinish(counter)\n      }\n      else{\n         setFinish(0)\n      }\n   }\n\n   return (\n      <>\n         <section className=\"test_page\">\n            <Tabs/>\n            <TabBody/>\n         </section>\n         <div>\n            <button onClick={() => finishHandler()} >FINISH</button>\n         </div>\n         {finish !== null && (\n            <div>\n               <p>барлык дурыс жауап: {finish}</p>\n            </div>\n         )}\n      </>\n   );\n};","/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/redux/index.js",[],"/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/redux/actions.js",[],"/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/NuskaList.js",[],"/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/redux/types.js",[],"/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/Main.js",[],"/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/auth/Auth.js",[],"/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/redux/reducers/surakReducer.js",[],"/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/redux/reducers/panReducer.js",[],"/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/redux/reducers/authReducer.js",[],"/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/redux/reducers/loadingReducer.js",[],"/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/auth/Login.js",[],"/Users/nurbakytappazov/Projects/TaskReact/TaskReact/task-react/src/components/auth/Register.js",["152","153"],"import React, { useEffect, useState } from 'react';\nimport InputMask from \"react-input-mask\";\nimport { useDispatch } from 'react-redux';\nimport { signIn } from '../../redux/actions';\n\nexport const Register = () => {\n   const[loading, setLoading] = useState(false)\n   const[errorPass, setErrorPass] = useState('')\n   const [fio, setFio] = useState('')\n   const [phone, setPhone] = useState('')\n   const [email, setEmail] = useState('')\n   const [mektep, setMektep] = useState('')\n   const [pan1, setPan1] = useState('pan1')\n   const [pan2, setPan2] = useState('pan2')\n   const [pass1, setPass1] = useState('');\n   const [pass2, setPass2] = useState('');\n\n   const [pans, setPans] = useState(null)\n\n   const dispatch = useDispatch()\n\n   useEffect(() => {\n      getPan()\n   }, [])\n\n   const getPan = async () => {\n      let response = await fetch('https://cors-anywhere.herokuapp.com/http://entapp-001-site7.itempurl.com/api/auth/getpan');\n      let result = await response.json()\n      setPans(result)\n   }\n\n   const register = async (phone) => {\n      setLoading(true);\n      setErrorPass(null);\n      if(fio === '' || phone === '' || pass1 === ''){\n         if(pass1 === ''){\n            setLoading(false)\n            setErrorPass('Құпиясөз ойлап табыңыз!')\n         }\n         if(phone === ''){\n            setLoading(false)\n            setErrorPass('Телефон номеріңізді енгізіңіз!')\n         }\n         if(fio === '' && fio.trim().length < 6){\n            setLoading(false)\n            setErrorPass('Аты-жөніңіз міндетті!')\n         }\n      }\n      else if(pan1 === 'pan1' || pan2 === 'pan2' || pan2 === pan1){\n         if(pan1 === 'pan1') {\n            setLoading(false)\n            setErrorPass('Пәндерді таңдаңыз!')\n         }\n         if(pan2 === 'pan2') {\n            setLoading(false)\n            setErrorPass('Пәндерді таңдаңыз!')\n         }\n         if(pan2 === pan1) {\n            setLoading(false)\n            setErrorPass('Пәндер бірдей болмайды!')\n         }\n      }\n      else if(pass1.trim().length < 6){\n         setLoading(false)\n         setErrorPass('Құпиясөз кем дегенде 6 символ болуы керек!!!')\n      }\n      else if(pass2 !== pass1){\n         setLoading(false)\n         setErrorPass('Құпиясөздер бірдей емес!')\n      }\n      else{\n         setLoading(true)\n         phone = phone.replace(\"+\", \"\").replace(\"(\", \"\").replace(\")\", \"\")\n         .replace(\" \", \"\").replace(\" \", \"\").replace(\"-\", \"\").replace(\"-\", \"\");\n\n         let response = \n            await fetch('https://cors-anywhere.herokuapp.com/http://entapp-001-site7.itempurl.com/api/auth/register', {\n               method: 'POST',\n               headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n               },\n               body: JSON.stringify({\n                  \"Fio\" : fio,\n                  \"PhoneNumber\" : phone,\n                  \"Email\" : email,\n                  \"Password\" : pass1,\n                  \"Mektep\" : mektep,\n                  \"Klass\" : \"11\",\n                  \"Pan1\" : pan1,\n                  \"Pan2\" : pan2\n               })\n            })\n         let res = await response.json();\n         setLoading(false)\n         // console.log(res)\n\n         if(res !== null){\n            if(res === 'error'){\n               setErrorPass('Бұл номер жүйеде тіркелген!')\n            }\n            else{\n               if(res.id){\n                  sessionStorage.setItem(\"user\", res.id)\n                  sessionStorage.setItem(\"userData\", JSON.stringify({\n                     \"Fio\" : fio,\n                     \"PhoneNumber\" : phone,\n                     \"Email\" : email,\n                     \"Mektep\" : mektep,\n                     \"Klass\" : \"11\",\n                     \"Pan1\" : pan1,\n                     \"Pan2\" : pan2\n                  }))\n                  dispatch(signIn(res.id))\n               }\n            }\n         }\n         else{\n            setErrorPass('Проблема с подключением! Повторите попытку!')\n         }\n      }\n   }\n   \n\n\n\n\n\n   return (\n      <div className=\"login_content reg_content\">\n         <form className=\"vhod\">\n            <h2>Жүйеге тіркелу</h2>\n            <input type=\"text\" value={fio} onChange={(e) => setFio(e.target.value)} placeholder=\"Аты-жөні\" required />\n            <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\" required />\n            <input type=\"text\" value={mektep} onChange={(e) => setMektep(e.target.value)} placeholder=\"Мектеп\" required />\n            <InputMask\n               value={phone}\n               onChange={(e) => setPhone(e.target.value)}\n               mask='+7 (799) 999-99-99'\n               type='tel'\n               placeholder=\"Телефон номер\"\n               required\n            />\n            <select name='pan1' value={pan1} onChange={e => setPan1(e.target.value)} defaultValue={pan1}>\n               <option key={'pan1-def'} value=\"pan1\" disabled>1-пәнді таңдаңыз...</option>\n               {pans !== null &&\n                  pans.map((item, index) => {\n                     if(index > 2) {\n                        return (\n                           <option key={'pan1-'+index} value={item.id}>{item.lessonName}</option>\n                        )\n                     }\n                  })\n               }\n            </select>\n            <select name='pan2' value={pan2} onChange={e => setPan2(e.target.value)} defaultValue={pan2}>\n               <option key={'pan2-def'} value=\"pan2\" disabled>2-пәнді таңдаңыз...</option>\n               {pans !== null &&\n                  pans.map((item, index) => {\n                     if(index > 2) {\n                        return (\n                           <option key={'pan2-'+index} value={item.id}>{item.lessonName}</option>\n                        )\n                     }\n                  })\n               }\n            </select>\n            <input type=\"password\" value={pass1} onChange={(e) => setPass1(e.target.value)} placeholder=\"Құпиясөз\" required />\n            <input type=\"password\" value={pass2} onChange={(e) => setPass2(e.target.value)} placeholder=\"Құпиясөзді қайталыңыз\" required />\n            <p style={{color: 'red'}}>{errorPass}</p>\n            <button disabled={loading} type=\"button\" onClick={() => register(phone)}>\n               {loading === true ? 'Күту тұрыңыз' : 'Тіркелу'}\n            </button>\n         </form>\n      </div>\n   );\n};",{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":9,"column":16,"nodeType":"160","endLine":9,"endColumn":133},{"ruleId":"154","replacedBy":"161"},{"ruleId":"156","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":19,"column":33,"nodeType":"165","messageId":"166","endLine":19,"endColumn":35},{"ruleId":"163","severity":1,"message":"164","line":21,"column":47,"nodeType":"165","messageId":"166","endLine":21,"endColumn":49},{"ruleId":"167","severity":1,"message":"168","line":80,"column":34,"nodeType":"160","endLine":80,"endColumn":128},{"ruleId":"167","severity":1,"message":"168","line":91,"column":40,"nodeType":"160","endLine":91,"endColumn":127},{"ruleId":"167","severity":1,"message":"168","line":104,"column":40,"nodeType":"160","endLine":104,"endColumn":127},{"ruleId":"167","severity":1,"message":"168","line":117,"column":40,"nodeType":"160","endLine":117,"endColumn":127},{"ruleId":"167","severity":1,"message":"168","line":130,"column":40,"nodeType":"160","endLine":130,"endColumn":127},{"ruleId":"167","severity":1,"message":"168","line":143,"column":40,"nodeType":"160","endLine":143,"endColumn":127},{"ruleId":"167","severity":1,"message":"168","line":156,"column":40,"nodeType":"160","endLine":156,"endColumn":127},{"ruleId":"169","severity":1,"message":"170","line":19,"column":7,"nodeType":"171","endLine":19,"endColumn":17,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":33,"column":27,"nodeType":"175","messageId":"176","endLine":33,"endColumn":29},{"ruleId":"163","severity":1,"message":"177","line":69,"column":83,"nodeType":"165","messageId":"178","endLine":69,"endColumn":85},{"ruleId":"163","severity":1,"message":"164","line":13,"column":28,"nodeType":"165","messageId":"166","endLine":13,"endColumn":30},{"ruleId":"163","severity":1,"message":"164","line":14,"column":31,"nodeType":"165","messageId":"166","endLine":14,"endColumn":33},{"ruleId":"163","severity":1,"message":"177","line":147,"column":42,"nodeType":"165","messageId":"178","endLine":147,"endColumn":44},{"ruleId":"163","severity":1,"message":"177","line":159,"column":42,"nodeType":"165","messageId":"178","endLine":159,"endColumn":44},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["179"],["180"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSurak'. Either include it or remove the dependency array.","ArrayExpression",["181"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},"Update the dependencies array to be: [firstPan, getSurak]",{"range":"184","text":"185"},[713,723],"[firstPan, getSurak]"]